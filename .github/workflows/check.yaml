name: test

on:
  push:
    branches: [dev]
    paths:
      - "**.py"
      - ".github/workflows/check.yaml"
      - "pyproject.toml"
  pull_request:
    branches: [dev, main]
    paths:
      - "**.py"
      - ".github/workflows/check.yaml"
      - "pyproject.toml"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    name: check ${{ matrix.python-version }}
    steps:
      - uses: actions/checkout@v4
  
      - name: Set up uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up Python ${{ matrix.python-version }}
        id: setup-python
        run: |
          uv python install ${{ matrix.python-version }}
          uv python pin ${{ matrix.python-version }}
          uv lock
          echo "PY=$(uv run python -VV | shasum -a 256 | cut -d' ' -f1)" >> $GIHUB_OUPUT

      - name: Restore uv cache
        uses: actions/cache@v4
        id: uv-cache
        with:
          path: /tmp/.uv-cache
          key: uv-${{ steps.setup-python.outputs.PY }}-${{ hashFiles('uv.lock') }}
          restore-keys: |
            uv-${{ steps.setup-python.outputs.PY }}-${{ hashFiles('uv.lock') }}
            uv-${{ steps.setup-python.outputs.PY }}
  
      - name: Install dependencies
        if: steps.uv-cache.outputs.cache-hit != 'true'
        run: uv sync

      - name: Restore pre-commit cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ steps.setup-python.outputs.PY }}-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Test with pytest
        run: |
          uv run pytest

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.12'
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}